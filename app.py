import streamlit as st
import pandas as pd
import numpy as np
import scipy.stats as stats
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px
from sklearn.linear_model import LinearRegression
from sklearn.metrics import r2_score

# Configura√ß√£o da p√°gina
st.set_page_config(
    page_title="Impacto da IA no Mercado de Trabalho",
    page_icon="ü§ñ",
    layout="wide"
)

# Fun√ß√£o para carregar os dados
@st.cache_data
def carregar_dados():
    try:
        df = pd.read_csv("dados.csv", encoding="utf-8-sig")
        df.columns = ['Setor', 'Regi√£o', 'Impacto']
        df['Setor'] = df['Setor'].astype(str).str.strip()
        df['Regi√£o'] = df['Regi√£o'].astype(str).str.strip()
        df['Impacto'] = pd.to_numeric(df['Impacto'], errors='coerce')
        return df.dropna()
    except Exception as e:
        st.error(f"Erro ao carregar os dados: {e}")
        return pd.DataFrame()

df = carregar_dados()

# Menu lateral
menu = st.sidebar.selectbox(
    "Navega√ß√£o",
    ["Introdu√ß√£o", "Base de Dados", "An√°lise Descritiva", "Infer√™ncia Estat√≠stica", 
     "Regress√£o Linear", "IA Integrada", "Mapa Geoespacial"]
)

# Introdu√ß√£o
if menu == "Introdu√ß√£o":
    st.title("Introdu√ß√£o üöÄ")
    st.write("""
    A intelig√™ncia artificial (IA) est√° transformando o mercado de trabalho global, criando uma nova din√¢mica entre profiss√µes emergentes e aquelas em decl√≠nio.
    Este projeto explora como a ado√ß√£o da IA afeta diferentes setores e regi√µes, propondo an√°lises baseadas em dados para compreender suas implica√ß√µes.
    """)

# Base de Dados + Intervalo de Confian√ßa
elif menu == "Base de Dados":
    st.title("Base de Dados üìä")
    if not df.empty:
        st.dataframe(df)
        setor_escolhido = st.selectbox("Selecione o setor:", df['Setor'].unique())
        df_filtrado = df[df['Setor'] == setor_escolhido]

        # Estat√≠sticas
        dados = df_filtrado['Impacto']
        media = np.mean(dados)
        desvio = np.std(dados, ddof=1)
        n = len(dados)
        t_critico = stats.t.ppf(0.975, df=n-1)
        margem_erro = t_critico * (desvio / np.sqrt(n))
        ic_min = media - margem_erro
        ic_max = media + margem_erro

        st.metric("M√©dia de Impacto", f"{media:.2f}%")
        st.write(f"Intervalo de Confian√ßa (95%): **[{ic_min:.2f}%, {ic_max:.2f}%]**")

        fig, ax = plt.subplots()
        ax.bar(setor_escolhido, media, yerr=margem_erro, capsize=10, color='royalblue')
        ax.set_ylabel('Impacto (%)')
        ax.set_title(f'Intervalo de Confian√ßa (95%) - {setor_escolhido}')
        ax.set_ylim(0, 100)
        st.pyplot(fig)
    else:
        st.warning("Dados n√£o carregados.")

# An√°lise Descritiva
elif menu == "An√°lise Descritiva":
    st.title("An√°lise Descritiva üìà")
    st.write("Estat√≠sticas b√°sicas e gr√°ficos.")
    st.write(df.describe())

    st.subheader("Gr√°fico de Impacto por Setor")
    fig = px.box(df, x="Setor", y="Impacto", color="Setor", title="Distribui√ß√£o do Impacto por Setor")
    st.plotly_chart(fig)

# Infer√™ncia Estat√≠stica
elif menu == "Infer√™ncia Estat√≠stica":
    st.title("Infer√™ncia Estat√≠stica üìâ")
    st.write("Testamos a hip√≥tese de que o setor de Tecnologia possui maior impacto que a m√©dia.")
    tecnologia = df[df['Setor'] == 'Tecnologia']['Impacto']
    outros = df[df['Setor'] != 'Tecnologia']['Impacto']
    t_stat, p_valor = stats.ttest_ind(tecnologia, outros)

    st.write(f"T-Stat: {t_stat:.2f}, P-Valor: {p_valor:.4f}")
    if p_valor < 0.05:
        st.success("Resultado significativo: O impacto da IA na Tecnologia √© maior que nos outros setores.")
    else:
        st.warning("Sem evid√™ncias suficientes para afirmar que o impacto da IA na Tecnologia √© maior.")

# Regress√£o Linear
elif menu == "Regress√£o Linear":
    st.title("Regress√£o Linear üìä")
    st.write("Analisamos a rela√ß√£o entre √çndice num√©rico e Impacto.")
    
    # Como n√£o tem Latitude, vamos criar uma vari√°vel num√©rica a partir da Regi√£o
    df['Regiao_Num'] = pd.factorize(df['Regi√£o'])[0]

    X = df[['Regiao_Num']]
    y = df['Impacto']
    modelo = LinearRegression()
    modelo.fit(X, y)
    y_pred = modelo.predict(X)

    r2 = r2_score(y, y_pred)
    st.write(f"Coeficiente de Determina√ß√£o (R¬≤): {r2:.2f}")
    st.write(f"Equa√ß√£o: Impacto = {modelo.coef_[0]:.2f} * Regi√£o_Num + {modelo.intercept_:.2f}")

    fig, ax = plt.subplots()
    ax.scatter(df['Regiao_Num'], df['Impacto'], color='blue', label='Dados')
    ax.plot(df['Regiao_Num'], y_pred, color='red', label='Regress√£o Linear')
    ax.set_xlabel('Regi√£o (Num√©rica)')
    ax.set_ylabel('Impacto (%)')
    ax.legend()
    st.pyplot(fig)

# IA Integrada
elif menu == "IA Integrada":
    st.title("IA Integrada ü§ñ")
    st.write("Interaja com a IA sobre impacto da automa√ß√£o.")
    pergunta = st.text_input("Fa√ßa sua pergunta:")
    if pergunta:
        st.info("Resposta autom√°tica: A IA impacta de forma diferente conforme o setor e a regi√£o.")

# Mapa Geoespacial
elif menu == "Mapa Geoespacial":
    st.title("Mapa Geoespacial üåç")
    st.write("Sem dados de geolocaliza√ß√£o dispon√≠veis para gerar o mapa.")
    st.warning("Para visualizar o mapa, adicione as colunas 'Latitude' e 'Longitude' ao CSV.")

# Rodap√©
st.sidebar.title("Sobre o Projeto")
st.sidebar.write("Explore o impacto da IA no mercado de trabalho.")
